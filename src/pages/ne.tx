"use client"; // Ensure it's a client-side component

import React, { useState, useEffect } from "react";
import { GoogleMap, LoadScript, DirectionsService, DirectionsRenderer } from "@react-google-maps/api";

const mapContainerStyle = {
  width: "100%",
  height: "500px",
};

const defaultCenter = {
  lat: 28.7041, // Default location (e.g., New Delhi)
  lng: 77.1025,
};

const SafeRoutes = () => {
  const [directions, setDirections] = useState(null);
  const [userLocation, setUserLocation] = useState(null);

  useEffect(() => {
    navigator.geolocation.getCurrentPosition((position) => {
      setUserLocation({
        lat: position.coords.latitude,
        lng: position.coords.longitude,
      });
    });
  }, []);

  const fetchSafeRoute = () => {
    if (!userLocation) return;

    const destination = { lat: 28.5355, lng: 77.3910 }; // Example: Noida as a destination

    const directionsService = new window.google.maps.DirectionsService();
    directionsService.route(
      {
        origin: userLocation,
        destination,
        travelMode: window.google.maps.TravelMode.DRIVING,
        provideRouteAlternatives: true,
      },
      (result, status) => {
        if (status === window.google.maps.DirectionsStatus.OK) {
          const safeRoute = selectSafeRoute(result.routes);
          setDirections(safeRoute);
        } else {
          console.error("Error fetching directions:", status);
        }
      }
    );
  };

  // AI Logic to select the safest route
  const selectSafeRoute = (routes) => {
    return routes.reduce((safest, route) => {
      const safetyScore = calculateSafetyScore(route);
      return safetyScore > safest.safetyScore ? { ...route, safetyScore } : safest;
    }, { safetyScore: -Infinity });
  };

  // Mock AI function for safety score
  const calculateSafetyScore = (route) => {
    return Math.random() * 100; // Replace with AI model integration
  };

  return (
    <LoadScript googleMapsApiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}>
      <div className="flex flex-col items-center">
        <button onClick={fetchSafeRoute} className="bg-blue-600 text-white p-2 rounded">
          Find Safe Route
        </button>
        <GoogleMap mapContainerStyle={mapContainerStyle} center={userLocation || defaultCenter} zoom={14}>
          {directions && <DirectionsRenderer directions={directions} />}
        </GoogleMap>
      </div>
    </LoadScript>
  );
};

export default SafeRoutes;
